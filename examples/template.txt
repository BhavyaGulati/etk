from etk.extraction_module import ETKModule
from etk.extractors.glossary_extractor import GlossaryExtractor
from etk.extractors.spacy_rule_extractor import SpacyRuleExtractor
from etk.extractors.html_content_extractor import HTMLContentExtractor, Strategy
from etk.document_selector import DefaultDocumentSelector
from etk.document import Document


class BaseExtractionModule(ETKModule):
    """
    Abstract class for extraction module
    """
    def __init__(self, etk):
        ETKModule.__init__(self, etk)
        self.readability_extractor = HTMLContentExtractor()
${extractor_list}

    def process_document(self, doc: Document):
        """
        Add your code for processing the document
        """
        doc.value["readability_extraction"] = {}

        all_text = self.readability_extractor.extract(doc.cdr_document["raw_content"], strategy=Strategy.ALL_TEXT)
        doc.select_segments("$.readability_extraction")[0].store(all_text, "all_text")

        strict_text = self.readability_extractor.extract(doc.cdr_document["raw_content"], strategy=Strategy.MAIN_CONTENT_STRICT)
        doc.select_segments("$.readability_extraction")[0].store(strict_text, "strict_text")

        relax_text = self.readability_extractor.extract(doc.cdr_document["raw_content"], strategy=Strategy.MAIN_CONTENT_RELAXED)
        doc.select_segments("$.readability_extraction")[0].store(relax_text, "relax_text")

        for text in all_text:
${execution_list}

        for text in strict_text:
${execution_list}

        for text in relax_text:
${execution_list}

    def document_selector(self, doc: Document) -> bool:
        """
        Boolean function for selecting document
        Args:
            doc: Document

        Returns:

        """
        return DefaultDocumentSelector().select_document(doc)
