# -*- coding: utf-8 -*-
import unittest
import os, sys
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))
sys.path.append(os.path.join(os.path.dirname(__file__), '../..'))
from data_extractors import weight_extractor
weight_test_data = {
  "jsonlines": [{'text': '\n           \n \n \n \n \n Ethnicity: White \n \n \n \n Hair Color: Brunette \n \n \n \n Eye Color: Hazel \n \n \n \n Body Type: Curvy \n \n \n \n Bust: 34 C \n \n \n \n Height: 5\'4" \n \n \n \n Availability: Incall, Outcall \n', 'weight': []}, {'text': 'Measurements: 105lbs 5\'2" 34c with a beautiful face', 'weight': [{'context': {'start': 14, 'end': 20}, 'value': '105', 'metadata': {'unit': 'pound'}}]}, {'text': "I'm very petite gentlemen, standing at 5''1 and 105lbs. i have a 34c bust.", 'weight': [{'context': {'start': 48, 'end': 54}, 'value': '105', 'metadata': {'unit': 'pound'}}]}, {'text': '24 years old, 5\'2" 105lbs , 32B ', 'weight': [{'context': {'start': 19, 'end': 25}, 'value': '105', 'metadata': {'unit': 'pound'}}]}, {'text': 'Chrystle Kims \n Age: 24 yrs \nMeasurements: 32" B natural, 23", 33" ( 81-58-84 ) \nHeight: 5\' 7" (170cm) \nWeight: 51kg (112lb) \n \n \n \n \n \n Brooke Montpellier \n Age: 22 yrs \nMeasurements: 32" A natural, 25", 36" (82 - 61 - 86) \nHeight: 5\' 9" (179cm) \nWeight: 57kg (130lb) \n \n \n \n \n \n', 'weight': [{'context': {'start': 112, 'end': 116}, 'value': '51', 'metadata': {'unit': 'kilogram'}}, {'context': {'start': 118, 'end': 123}, 'value': '112', 'metadata': {'unit': 'pound'}}, {'context': {'start': 256, 'end': 260}, 'value': '57', 'metadata': {'unit': 'kilogram'}}, {'context': {'start': 262, 'end': 267}, 'value': '130', 'metadata': {'unit': 'pound'}}, {'context': {'start': 110, 'end': 116}, 'value': '51', 'metadata': {'unit': 'kilogram'}}, {'context': {'start': 254, 'end': 260}, 'value': '57', 'metadata': {'unit': 'kilogram'}}]}, {'text': 'Shaved completely \n \n \n Height \n 167 cm \n \n \n Weight \n 53 kg \n \n \n Bust-Waist-Hip \n 85-60-87 \n \n \n Cup size \n B \n \n \n', 'weight': [{'context': {'start': 55, 'end': 60}, 'value': '53', 'metadata': {'unit': 'kilogram'}}]}, {'text': 'DETAIL   \n \n \n \n Age : \n  19 \n Height :  178 \n Weight :  55 \n  Breast :  90-60-90 \n', 'weight': [{'context': {'start': 53, 'end': 59}, 'value': '55', 'metadata': {'unit': 'kilogram'}}]}, {'text': 'Nationality:   Thai   Statistics:   34C-26-36   Height:   155 cm   Weight:   47 Kg   Hair Colour:   Brown   ', 'weight': [{'context': {'start': 77, 'end': 82}, 'value': '47', 'metadata': {'unit': 'kilogram'}}, {'context': {'start': 73, 'end': 82}, 'value': '47', 'metadata': {'unit': 'kilogram'}}]}, {'text': 'Travel: \n worldwide \n \n \n Weight: \n 117 lb (53 kg) \n \n \n Height: \n 5.5 ft (166 cm) \n \n \n Ethnicity: \n Indian \n', 'weight': [{'context': {'start': 36, 'end': 42}, 'value': '117', 'metadata': {'unit': 'pound'}}, {'context': {'start': 44, 'end': 49}, 'value': '53', 'metadata': {'unit': 'kilogram'}}, {'context': {'start': 32, 'end': 42}, 'value': '117', 'metadata': {'unit': 'pound'}}]}, {'text': "Age: \n 24 \n \n \n Height: \n 272cm / 8'9\xef\xbf\xbd\xef\xbf\xbd\xef\xbf\xbd \n \n \n Weight: \n 55kg / 121lbs \n \n \n Body (cm): \n 36/32/34 \n", 'weight': [{'context': {'start': 63, 'end': 67}, 'value': '55', 'metadata': {'unit': 'kilogram'}}, {'context': {'start': 70, 'end': 76}, 'value': '121', 'metadata': {'unit': 'pound'}}, {'context': {'start': 59, 'end': 67}, 'value': '55', 'metadata': {'unit': 'kilogram'}}]}, {'text': 'Age: 23   Height: 169   Weight: 55   Hair: Brown', 'weight': [{'context': {'start': 30, 'end': 34}, 'value': '55', 'metadata': {'unit': 'kilogram'}}]}, {'text': '\n TS RUBI: THE NAME SAYS IT ALL!  \n INCALL $250 OUTCALL $350 \n \n \n \n \n \n Gender \n Age \n Ethnicity \n Hair Color \n Eye Color \n Height \n Weight \n Measurements \n Affiliation \n Availability \n Available To \n \n \n \n \n Transsexual \n 27 \n Latino/Hispanic \n Brown \n Hazel \n 5\'5" \n 130 lb \n 34C - 28" - 34" \n ', 'weight': [{'context': {'start': 270, 'end': 276}, 'value': '130', 'metadata': {'unit': 'pound'}}]}, {'text': 'Age : \n 22 \n \n \n  Weight  : \n 53 \n \n \n  Height  : \n 5.7 \n \n \n', 'weight': [{'context': {'start': 24, 'end': 32}, 'value': '53', 'metadata': {'unit': 'kilogram'}}]}, {'text': 'Breasts DD Eyes gray Height 1.52 Skin Tanned Weight 60', 'weight': [{'context': {'start': 51, 'end': 54}, 'value': '60', 'metadata': {'unit': 'kilogram'}}]}, {'text': '\n Height: \n \n5\'7" - 167 cm  \n \n \n Weight: \n \n150lbs - 60 kg  \n ', 'weight': [{'context': {'start': 45, 'end': 51}, 'value': '150', 'metadata': {'unit': 'pound'}}, {'context': {'start': 54, 'end': 59}, 'value': '60', 'metadata': {'unit': 'kilogram'}}, {'context': {'start': 40, 'end': 51}, 'value': '150', 'metadata': {'unit': 'pound'}}]}, {'text': "\n Height: \n 168cm / 5'5\xef\xbf\xbd\xef\xbf\xbd\xef\xbf\xbd \n \n \n Weight: \n 55kg / 121lbs \n ", 'weight': [{'context': {'start': 49, 'end': 53}, 'value': '55', 'metadata': {'unit': 'kilogram'}}, {'context': {'start': 56, 'end': 62}, 'value': '121', 'metadata': {'unit': 'pound'}}, {'context': {'start': 45, 'end': 53}, 'value': '55', 'metadata': {'unit': 'kilogram'}}]}, {'text': "\n \n Height: \r\n                          5'3''\r\n                       \n \n \n \n \n \n Weight: \r\n                          125 lbs\r\n                       \n \n \n \n \n \n", 'weight': [{'context': {'start': 118, 'end': 125}, 'value': '125', 'metadata': {'unit': 'pound'}}]}, {'text': 'Height \n 5ft 8in - 5 ft 11in \n \n \n Bust \n \n 42 in \n \n \n \n Breasts \n Large,', 'weight': []}, {'text': 'Im White and Dominican 5ft 115lbs 38c Cup Size, 24 inch waiste', 'weight': [{'context': {'start': 27, 'end': 33}, 'value': '115', 'metadata': {'unit': 'pound'}}]}, {'text': 'I am 25 of age, stand 5ft5in, fair in complexion, Long hair', 'weight': []}]
}


class TestHeightExtractorMethods(unittest.TestCase):

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def test_height_extractor(self):
        print "data_extractors.weight.weight_extractor"
        data_lines = weight_test_data['jsonlines']
        for line in data_lines:
            extraction = weight_extractor.extract(line['text'])
            self.assertEqual(extraction, line['weight'])

if __name__ == '__main__':
    unittest.main()